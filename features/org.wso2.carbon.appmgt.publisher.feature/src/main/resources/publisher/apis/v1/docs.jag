<%
include("/extensions/webapp/modules/jagg/jagg.jag");


(function () {
    var mod, obj, result, username,
        action = request.getParameter("action");
    //site = require("/site/conf/site.json");
    // msg = require("/site/conf/ui-messages.jag");

    var log = new Log();
    response.contentType = "application/json";
    if (jagg.getUser() == null) {
        print({
                  error:true,
                  action: 'AuthenticateError'
              });
    } else {
        var audutLog = require('/modules/auditLog/logger.js');
        var server = require('store').server;
        var tenantId = server.current(session).tenantId
        var username = server.current(session).username;
        if (action === "addDocumentation") {
            mod = jagg.module("documentation");
            var apiData = {};
            var docData = {};
            var mode = request.getParameter("mode");
            apiData.provider = request.getParameter("provider","UTF-8");
            apiData.name = request.getParameter("apiName","UTF-8");
            apiData.version = request.getParameter("version");
            docData.name = request.getParameter("docName","UTF-8");
            docData.type = request.getParameter("docType");
            docData.sourceType = request.getParameter("sourceType");
            docData.sourceUrl = request.getParameter("docUrl");
            docData.summary = request.getParameter("summary","UTF-8");
            docData.fileContent = request.getFile("docLocation");
            docData.content = "";
            docData.otherTypeName = request.getParameter("newType");

            if (mode == "Update") {
                result = mod.updateDocumentation(apiData, docData);
                audutLog.writeLog(tenantId, username, "DocumentUpdated", apiData.name,
                                  "{" + "providerName='" + apiData.provider + '\'' +
                                  ", apiName='" + apiData.name + '\'' +
                                  ", version='" + apiData.version + '\'' +
                                  '}', "", "");
            } else {
                result = mod.addDocumentation(apiData, docData);
                audutLog.writeLog(tenantId, username, "NewDocumentAdded", apiData.name,
                                  "{" + "providerName='" + apiData.provider + '\'' +
                                  ", apiName='" + apiData.name + '\'' +
                                  ", version='" + apiData.version + '\'' +
                                  '}', "", "");

            }

            if (result.error == "true") {
                obj = {
                    error:result.error,
                    // action:result.action
                };
            } else {
                obj = {
                    error:false
                }
            }
            print(obj);
        } else if (action === "addInlineContent") {
            mod = jagg.module("documentation");
            var apiDetails = {};
            var docDetails = {};
            apiDetails.provider = request.getParameter("provider");
            apiDetails.name = request.getParameter("apiName");
            apiDetails.version = request.getParameter("version");
            docDetails.name = request.getParameter("docName");
            docDetails.content = request.getParameter("content");
            result = mod.addInlineContent(apiDetails, docDetails);
            if (result.error) {
                obj = {
                    error:result.error,
                    action: result.action
                };
            } else {
                var apiData = {};
                apiData.provider = request.getParameter("provider","UTF-8");
                apiData.name = request.getParameter("apiName","UTF-8");
                apiData.version = request.getParameter("version");
                audutLog.writeLog(tenantId, username, "DocumentEdited", apiData.name,
                                  "{" + "providerName='" + apiData.provider + '\'' +
                                  ", apiName='" + apiData.name + '\'' +
                                  ", version='" + apiData.version + '\'' +
                                  '}', "", "");
                obj = {
                    error:false
                }
            }
            print(obj);
        } else if (action === "getInlineContent") {
            mod = jagg.module("documentation");
            var api = {};
            api.provider = request.getParameter("provider");
            api.name = request.getParameter("apiName");
            api.version = request.getParameter("version");
            docName = request.getParameter("docName");
            result = mod.getInlineContent(api, docName);
            if (result.error) {
                obj = {
                    error:result.error,
                    action: result.action
                };
            } else {
                obj = {
                    doc:result.doc,
                    error:false
                }
            }
            print(obj);
        } else if (action === "removeDocumentation") {
            mod = jagg.module("documentation");
            var apiInfo = {};
            var docInfo = {};
            apiInfo.provider = request.getParameter("provider");
            apiInfo.name = request.getParameter("apiName");
            apiInfo.version = request.getParameter("version");
            docInfo.name = request.getParameter("docName");
            docInfo.type = request.getParameter("docType");

            result = mod.removeDocumentation(apiInfo, docInfo);
            if (result.error) {
                obj = {
                    error:result.error,
                    action: result.action
                };
            } else {
                audutLog.writeLog(tenantId, username, "DocumentRemoved", apiInfo.name,
                                  "{" +
                                  "providerName='" + apiInfo.provider + '\'' +
                                  ", apiName='" + apiInfo.name + '\'' +
                                  ", version='" + apiInfo.version + '\'' +
                                  '}', "", "");

                obj = {
                    error:false
                }
            }
            print(obj);
        } else if (action === "getAllDocumentation") {
            mod = jagg.module("documentation");
            var app = {};
            app.provider = request.getParameter("provider");
            app.name = request.getParameter("apiName");
            app.version = request.getParameter("version");
            result = mod.getAllDocumentation(app);
            if (result.error) {
                obj = {
                    error:result.error,
                    action: result.action
                };
            } else {
                obj = {
                    error:false,
                    docs:result.docs
                }
            }
            print(obj);
        } else {
            print({
                      error:true,
                      //action:msg.error.invalidAction(action)
                  });
        }
    }
}());
%>
