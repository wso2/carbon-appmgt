<%
	/*
	Description: Used to direct the /asset requests 
	Filename:asset_routers.js
	Created Date: 31/7/2013
	*/

	(function(){
		var config=require('/config/publisher.json');

		var DEFAULT_ROUTER_NAME='/asset.jag';
		var EXT_ROUTER_NAME='/pages/asset.jag';
		var EXT_PATH=config.paths.ASSET_EXT_PATH;
		var DEFAULT_PATH=config.paths.ASSET_DEFAULT_PATH;
		var URL=config.urls.ASSET;
		
		var log =  new Log();
	
		var MSG_404='Asset not found';	//Eror 404 message

        var securityModule=require('/modules/security/security.manager.js').securityManagementModule();

        var sm=securityModule.cached();

        //This will short circuit the handling of the requests
        var passed=sm.check(session);
        //Stop servicing the request if the check failed
        if(!passed){
            return;
        }

		/*
		Checks the pattern array with the request uri
		@pattern:     An array of patterns e.g./{context}/[ASSET_PATH]/{type}
		@uriMatcher : A URIMatcher object 
		@return: true if the pattern matches,else false
		*/
		function isMatchingPattern(patterns,uriMatcher){
			
			for each(var pattern in patterns){
				
				if(uriMatcher.match(pattern)){
					
					return true;
				}
			}
			
			return false;
		}

				
		var matcher=new URIMatcher(request.getRequestURI());
		
		
		var patterns=[ '/{context}'+URL+'/{type}/{+suffix}',
				'/{context}'+URL+'/{type}'];

		
		if(isMatchingPattern(patterns,matcher)){

			var params=matcher.elements();
		
			var theme=params.theme;
			var type=params.type;
			var extLocation='/'+type+EXT_ROUTER_NAME;
			var path=EXT_PATH+extLocation; //Assume there is an extension
			

			//Check if an extension asset router exists			
			var fileTester=new File(path);

			if(fileTester.isExists()){
                log.info(path);
				include(path);
				return;
			}
			
						

			//Set the default path
			path=DEFAULT_PATH+DEFAULT_ROUTER_NAME;

            log.info(path);
			//Default 
			include(path);
			
			return;
		}

		response.sendError(404,MSG_404); 

	}());
%>
