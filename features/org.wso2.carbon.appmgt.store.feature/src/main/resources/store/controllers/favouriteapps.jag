<%
/*
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var caramel;
var SubscriptionService;
var subsApi;
var AuthService;
var authenticator;
var log = new Log('favouriteapps');

include('/jagg/jagg.jag');

require('/modules/store.js').exec(function (ctx) {
    var sso = ctx.sso,
            store = ctx.store,
            user = ctx.user,
            storeTenantId = ctx.tenant.tenantId,
            storeTenantDomain = ctx.tenant.domain;

    //if user not logged in redirect to login page
    if (!user) {
        var referer = store.getReferer(request);
        var redirectUrl = store.getRedirectUrl("/login?referer=" + referer);
        response.sendRedirect(redirectUrl);
        return;
    }
    caramel = require('caramel');
    var favourites = jagg.module("favourites");

    //Get subscription configuration options
    var subscriptionUtil = require('/themes/store/js/subscription-config.js');
    var isSelfSubscriptionEnabled = subscriptionUtil.isSelfSubscriptionEnabled();
    var isEnterpriseSubscriptionEnabled = subscriptionUtil.isEnterpriseSubscriptionEnabled();

    var hideAllAppsLink = false;
    //if both subscriptions off no need to show the link for all apps,
    //because all apps will be displayed in myapps page.
    if (!isSelfSubscriptionEnabled && !isEnterpriseSubscriptionEnabled) {
        hideAllAppsLink = true;
    }

    //Get the all favourite apps of logged in user
    var result = favourites.getAllFavouriteApps(user.username, user.tenantId,
                                                storeTenantDomain);
    var apps = (result.apps) ? result.apps : [];
    //filter webapp and sites
    apps = filterAssets(apps);
    //Check whether use has selected favourite page as default landing page
    //This is needed to show correct icon(set as home page /remove from home page) to user.
    var hasFavouritePage = false;
    result = favourites.hasFavouritePage(user.username, user.tenantId, storeTenantDomain);
    if (!result.error) {
        hasFavouritePage = result.status;
    }

    caramel.render({
                       header: {
                           user: user,
                           sso: sso,
                           searchOff: true,
                           hideAllAppsLink: hideAllAppsLink,
                           isHomePage: hasFavouritePage,
                           myFav: true,
                           storeTenantDomain: storeTenantDomain
                       },
                       sso: sso,
                       favouriteApps: apps
                   }, request, response, session);

}, request, response, session);


function getServiceDir(serviceName) {
    return '/extensions/assets/webapp/services/' + serviceName;
}

/**
 This method filter the given assets based on the type webapp/site **/
function filterAssets(assets) {
    var sites = [];
    var webApps = [];
    var apps = [];
    for (var i = 0; i < assets.length; i++) {
        if (assets[i].treatAsSite == "TRUE") {
            sites.push(assets[i]);
        } else {
            webApps.push(assets[i]);
        }
    }

    if (webApps.length > 0) {
        apps.push({
                      assets: webApps,
                      type: "Web Apps"
                  });
    }

    if (sites.length > 0) {
        apps.push({
                      assets: sites,
                      type: "Sites"
                  });

    }
    return apps;
}
%>

