<%
var generateAPIKey = function (api, context, application, username, keyType, callbackUrl) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.getKey(api.provider, api.name, api.version, context, application, username, keyType, callbackUrl);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error: false,
            key: key
        };
    } catch (e) {
        log.error(e.action);
        return {
            error: e,
            key: null
        };
    }
};
var generateApplicationKey = function (application, username, keyType, callbackUrl, accessAllowDomains, validityTime) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.getApplicationKey(username, application, keyType, callbackUrl, accessAllowDomains, validityTime);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error: false,
            key: key
        };
    } catch (e) {
        log.error(e.action);
        return {
            error: e,
            key: null
        };
    }
};

var refreshToken = function (username, application, keyType, oldAccessToken, accessAllowDomains,
                             clientId, clientSecret, validityTime) {
    var key,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        key = store.refreshToken(username, application, keyType, oldAccessToken, accessAllowDomains,
                clientId, clientSecret, validityTime);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error: false,
            key: key
        };
    } catch (e) {
        log.error(e.action);
        return {
            error: e,
            key: null,
            action: e.action.split("Exception:")[1]
        };
    }
};

var updateAccessAllowDomains = function (oldAccessToken, accessAllowDomains) {
    var accessAllowDomains,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        accessAllowDomains = store.updateAccessAllowDomains(oldAccessToken, accessAllowDomains);
        if (log.isDebugEnabled()) {
            log.debug("generateAPIKey");
        }
        return {
            error: false
        };
    } catch (e) {
        log.error(e.action);
        return {
            error: true,
            action: e.action.split(":")[1]
        };
    }
};

%>
