<%
var caramel;
include('/extensions/assets/webapp/modules/jagg/jagg.jag');
require('/modules/store.js').exec(function (ctx) {
    var asset, aid, title,
            log = ctx.log,
            sso = ctx.sso,
            store = ctx.store,
            user = ctx.user,
            tenantId = ctx.tenantId,
            tenantDomain = ctx.tenant.domain,
            configs = ctx.configs,
            site = ctx.site,
            matcher = ctx.matcher,
            inDashboard = false,
            utility = require('/modules/util.js'),
            mdm = require('/extensions/assets/mobileapp/modules/mdm.js').module,
            mdmConfig = parse(String((new Packages.org.wso2.carbon.appmgt.mobile.store.MDMConfig()).getConfigs()));
            devicesClass = new Packages.org.wso2.carbon.appmgt.mobile.store.Devices();

    caramel = require('caramel');
    var social = carbon.server.osgiService('org.wso2.carbon.social.core.service.SocialActivityService');
    var storeHostObj = jagg.module("manager").getAPIStoreObj();
    var isSelfSignupEnabledForTenant = storeHostObj.isSelfSignupEnabledForTenant(tenantDomain);
    //Get the list of enabled app types
    var enabledTypeList = storeHostObj.getEnabledAssetTypeList();
    var subscriptionConfig = require('../../../../themes/store/js/subscription-config.js');
    var isSelfSubscriptionEnabled = subscriptionConfig.isSelfSubscriptionEnabled();
    var isEnterpriseSubscriptionEnabled = subscriptionConfig.isEnterpriseSubscriptionEnabled();

    var isNotCatalog = mdmConfig.IsCatalog == "true" ? false : true;

        var mdmUIConfig  = {enabled : isNotCatalog};
        var tenantedUrl = '/{context}/t/{domain}' + configs.assetsUrlPrefix + '/{type}/{aid}'

        if(matcher.match('/{context}' + configs.assetsUrlPrefix + '/{type}/{aid}') || matcher.match(tenantedUrl)){
            aid = matcher.elements().aid;
            title = store.assetLinks(type).title;
        }

    var isEnterpriseInstallEnabled = false;

    var isDeviceSubscriptionEnabled = mdmConfig.EnableSubscriptionFromDevices == "true" ? true : false;

    var isDirectDownloadEnabled = mdmConfig.EnableDirectDownload == "true" ? true : false;


    if(user && mdmConfig.EnterpriseOperations_Enabled){
        var server = require('store').server;
        var um = new carbon.user.UserManager(server, tenantId);
        var userRoles = um.getRoleListOfUser(user.username);
        for(var i = 0; i < userRoles.length; i++){
            if(userRoles[i] == mdmConfig.EnterpriseOperations_AuthorizedRole){
                isEnterpriseInstallEnabled = true;
                break;
            }
        }
    }

    try {
        asset = store.asset(type, aid);
    } catch (e) {
        response.sendError(404, 'Requested page cannot be found');
        return;
    }

    if (asset) {
        var assetLifecycleState = asset.lifecycleState;
        //If the asset is not in "Published" or "Deprecated" state, webapp overview page should not be accessible
        if (assetLifecycleState != "Published" && assetLifecycleState != "Deprecated") {
            response.sendError(404, 'Requested asset with assset is : ' + asset.id + 'cannot be found. It is in ' +
            assetLifecycleState + 'state.');
        }
    }

    if (store.isuserasset(aid, type)) {
        inDashboard = true;
    }

    var rxtAttributes = utility.getRXTAttributes(tenantId, type);

    var devices = [];
        if(user != null && isNotCatalog && isDeviceSubscriptionEnabled){
                devices =  parse(String(devicesClass.getDevicesList(stringify(user), user.tenantId, "user", [user.username])));
        }

    var headerData = site.header(tenantId, {
        sso: sso,
        user: user,
        isSelfSignUpEnabledForTenant: isSelfSignupEnabledForTenant
    });
    headerData.isSelfSignUpEnabledForTenant = isSelfSignupEnabledForTenant;
    headerData.domain = tenantDomain;
    headerData.assetType = "mobileapp";

    var searchQuery = { search: "", searchTerm: "overview_name"};

    //set rating
    var ratings = JSON.parse(social.getRating("mobileapp:" + asset.id));
    if (ratings) {
        asset.rating = Math.floor(ratings.rating);
    } else {
        asset.rating = 0;
    }

    caramel.render({
        title: asset.attributes.overview_name + ' | Store | WSO2 App Manager',
        user: user,
        sso: sso,
        devices: devices,
        isEnterpriseInstallEnabled: isEnterpriseInstallEnabled,
        isDeviceSubscriptionEnabled : isDeviceSubscriptionEnabled,
        isDirectDownloadEnabled :isDirectDownloadEnabled,
        header: headerData,

        navigation: site.navigation(tenantId),
        search: {
                query: searchQuery
        },
        isSocial: configs.socialCommentsEnable,

        type: type,
        embedURL: configs.server.http + '/gadgets/ifr?url=' + asset.attributes.overview_url,
        inDashboard: inDashboard,
        asset: asset,
        config : mdmUIConfig,
        tags: {
             data: {allTags: store.tags(type), searchedTag: ""}
        },
        myAssets: { user: user, type: type, title: title },
        recentAssets: store.recentAssets(type),
        assetType: "mobileapp",
        config: {
            isSelfSubscriptionEnabled: isSelfSubscriptionEnabled,
            isEnterpriseSubscriptionEnabled: isEnterpriseSubscriptionEnabled,
            enabledTypeList: enabledTypeList
        }
    });
}, request, response, session);
%>