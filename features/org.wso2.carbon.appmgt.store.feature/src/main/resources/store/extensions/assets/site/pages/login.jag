<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 Description: The script is used to handle the basic login with the username and the password
 Filename: login.jag
 */

include('../modules/jagg/jagg.jag');

var userDetails = {};
var authResult;
var log = new Log('app-login');
var parameters;
var AuthService = require('/extensions/assets/site/services/authentication.js').serviceModule;
var authenticator = new AuthService.Authenticator();

authenticator.init(jagg, session);

parameters = request.getAllParameters();

//Obtain the user details from the request object.
userDetails['username'] = parameters.username;
userDetails['password'] = parameters.password;
userDetails['tenant'] = null;

authResult = authenticator.login(userDetails);

caramel = require('caramel');
var contextPath = caramel.configs().context;
var reversProxyEnabled = caramel.configs().reverseProxyEnabled;
var reverseProxyHost = caramel.configs().reverseProxyHost;
var reDirectUrl = contextPath;
if(reversProxyEnabled) {
    reDirectUrl = reverseProxyHost+contextPath;
}
response.sendRedirect(reDirectUrl);

%>