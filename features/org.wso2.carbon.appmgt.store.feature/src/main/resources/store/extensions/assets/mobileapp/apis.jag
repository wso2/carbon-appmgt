<%
var type = "mobileapp";
var goose = require('/modules/goose.js').goose;
var Handle = require("handlebars").Handlebars;
var router = new goose({CONTEXT: "/store/"});
var configs = require('/config/store.js').config();
var log =new Log();
var user = require('store').server.current(session);
var process = require("process");
var emm = require('/modules/emm.js').emm;
var emmServer = new emm();
var server = require('store').server;
var enterpriseInstall = require('/extensions/assets/mobileapp/modules/mod-ent-install.js');
var mdmConfig = parse(String((new Packages.org.wso2.carbon.appmgt.mobile.store.MDMConfig()).getConfigs()));

var getTenantID = function() {
    if(!(typeof session === "undefined")){
        if (session.get("emmConsoleUser") && session.get("emmConsoleUser").tenantId != 0) {
            var tenantID = session.get("emmConsoleUser").tenantId;
            return tenantID;
        } else {
            return "-1234";
        }
    }
}
var getTenantDomainFromID = function() {
    if (arguments[0] == "-1234") {
        return "carbon.super";
    }
    var carbon = require('carbon');
    var ctx = {};
    ctx.tenantId = arguments[0];
    var tenantDomain = carbon.server.tenantDomain(ctx);
    return tenantDomain;
}




// DEVICES APIS
router.post('apps/devices/{deviceid}/{devicetype}/install', function(ctx){
    if (!user) {
        response.sendError(401, 'Unauthorized');
        return;
    }
        var tenant = server.tenant(request, session);
        var asset =  ctx.asset;
        var deviceId = ctx.deviceid;
        var deviceType = ctx.devicetype;
        var deviceIdentifier = {"id" : deviceId, "type" : deviceType};
        enterpriseInstall.performAction('install', tenant.tenantId, 'device', asset, stringify(deviceIdentifier));
});

router.post('apps/user/install', function(ctx){
    if (!user) {
        response.sendError(401, 'Unauthorized');
        return;
    }
    var tenant = server.tenant(request, session);
    var asset =  ctx.asset;
    enterpriseInstall.performAction('install', tenant.tenantId, 'user', asset, [user.username]);
});



router.post('apps/devices/uninstall', function(ctx){
    if (!user || mdmConfig.EnableSelfUnsubscription == false) {
        response.sendError(401, 'Unauthorized');
        return;
    }

    var asset =  ctx.asset;

    var tenant = server.tenant(request, session);
    var asset =  ctx.asset;
    var deviceId = ctx.deviceid;
    enterpriseInstall.performAction('uninstall', tenant.tenantId, 'user', asset, [user.username]);
});


router.process(request);
%>
