<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include('../modules/jagg/jagg.jag');

var parameters = request.getQueryString().split("&");

AuthService = require(getServiceDir('authentication.js')).serviceModule;
authenticator = new AuthService.Authenticator();
authenticator.init(jagg, session);

var docName = parameters[0];
var webAppProvider = parameters[1];
var webAppName = parameters[3];
var webAppVersion = parameters[2];
var userName = parameters[4];
var apiIdentifier = Packages.org.wso2.carbon.appmgt.api.model.APIIdentifier;
var apiIdentifierObj = new apiIdentifier(webAppProvider, webAppName, webAppVersion);
var APIProviderImpl = Packages.org.wso2.carbon.appmgt.impl.APIProviderImpl;

//In annonymous mode userName = "".
//APIProviderImpl initializes annonymous registry if the userName is null.
//Hence assigning userName = null.
if ("".equals(userName)) {
    userName = null;
}

var APIProviderImplObj = new APIProviderImpl(userName);
var find = '%20';
var regExp = new RegExp(find, 'g');
var docNameWithoutSpace = docName.replace(regExp, ' ');
var content = APIProviderImplObj.getDocumentationContent(apiIdentifierObj, docNameWithoutSpace);
var docData = {};
docData.webappName = webAppName;
docData.docName = decodeURI(docName);
docData.docContent = content;
var userData = authenticator.getLoggedInUser();

caramel.render({
    header: {
        user: userData
    },
    data: docData

});

function getServiceDir(serviceName) {
    return '../services/' + serviceName;
}

%>
