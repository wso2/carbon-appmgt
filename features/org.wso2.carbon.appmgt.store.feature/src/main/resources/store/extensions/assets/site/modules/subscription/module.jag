<%
jagg.module("subscription", {

    addAPISubscription: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/add.jag").addAPISubscription.apply(this, arguments);
    },

    addSubscription: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/add.jag").addSubscription.apply(this, arguments);
    },

    updateAPPVisibility: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/add.jag").updateAPPVisibility.apply(this, arguments);
    },

    removeAPISubscription: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/remove.jag").removeAPISubscription.apply(this, arguments);
    },

    getAllSubscriptions: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getAllSubscriptions.apply(this, arguments);
    },

    getAPISubscriptions: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getAPISubscriptions.apply(this, arguments);
    },

    getAPISubscription: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getAPISubscription.apply(this, arguments);
    },

    getAPISubscriptionsForApplication: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getAPISubscriptionsForApplication.apply(this, arguments);
    },

    getEnterprisesForApplication: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getEnterprisesForApplication.apply(this, arguments);
    },

    generateAPIKey: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/key.jag").generateAPIKey.apply(this, arguments);
    },

    generateApplicationKey: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/key.jag").generateApplicationKey.apply(this, arguments);
    },

    hasSubscribePermission: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/check-permissions.jag").hasSubscribePermission.apply(this, arguments);
    },

    refreshToken: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/key.jag").refreshToken.apply(this, arguments);
    },

    updateAccessAllowDomains: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/key.jag").updateAccessAllowDomains.apply(this, arguments);
    },

    checkSubscriptionWorkflow: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/workflow.jag").checkSubscriptionWorkflow.apply(this, arguments);
    },
    getUserSubscribedApps: function () {
        return jagg.require(jagg.getModulesDir() + "subscription/list.jag").getUserSubscribedApps.apply(this,
                                                                                                        arguments);
    }
});
%>