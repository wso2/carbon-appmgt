<%
/*
 *  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
response.addHeader('Content-type', 'application/json');

var matcher = new URIMatcher(request.getRequestURI()),
	method = request.getMethod(),
	databridge = require('/modules/databridge.js');

(function () {
	//TODO remove DB con !
   	var asset,body,parent_id,parent_type,result,
   		user,cid,activity_type,replies,rating, 
   		databridge = require('/modules/databridge.js'),
		db = new Database("jdbc:cassandra://localhost:9160/EVENT_KS?version=2.0.0","admin","admin",{"driverClassName":"org.apache.cassandra.cql.jdbc.CassandraDriver"});
	

	//TODO check for authenticated user !

    if (matcher.match('/{context}/apis/v1/comments')) {
    	if(method == 'GET'){
    		//TODOl move this to modules
    		result = databridge.getComments();
			print(result);
			return;
    	} else if(method == 'POST'){
    		asset = request.getParameter('id');
			parent_id = request.getParameter('parent');
			parent_type = request.getParameter('parent_type');
			user = {"url": "http://example.org/udara",
	      		"objectType" : "person",
	      		"id": "tag:example.org,2011:udara",
	      		"image": {
	       			 "url": "http://example.org/udara/image",
	        		 "width": 250,
	        		 "height": 250
	      		},
	      		"displayName": "Udara KR"};
			activity_type = "comment";
			body = request.getParameter('body');
			replies = {};
			rating ={};

			databridge.initPublisher(activity_type, asset, parent_id, parent_type, user, body, replies, rating);
			
        	return;
    	} else if(method == 'PUT'){
    		
    	} else if(method == 'DELETE'){
    		
    	}
    }
    
     if (matcher.match('/{context}/apis/v1/comments/{id}')) {
     	
     	asset = request.getParameter('id');
     	new Log().debug(asset);
     	result = db.query("SELECT * FROM org_wso2_ues_social_comments_stream WHERE KEY='" + asset + "'");
		print(result);
		return;
     }

    if (matcher.match('/{context}/api/comment/rate/')) {
		cid = request.getParameter('cid');
		rate = request.getParameter('rate');
		parent = false;
		databridge.initPublisher(cid,rate,parent);
        return;
    }
    
    response.sendError(404, 'API Endpoint Not Found');
})();
%>
